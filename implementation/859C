/*    
 *  eat_code    
 *  IIIT Allahabad
 */
#include <bits/stdc++.h>
//#include "pretty_print.h"
using namespace std;

#define mp make_pair
#define mt make_tuple
#define pb push_back
#define CONTAINS(a, x) (a.find(x) != a.end())
#define ALL(x) x.begin(), x.end()
#define SZ(x) (int)x.size()
#define nl cout << endl
#define F first
#define S second

#define what_is(x) cout << #x << " = " << x << endl
#define boost ios::sync_with_stdio(false);cin.tie(NULL)
#define CASET int ___T, case_n = 1; cin >> ___T; while (___T-- > 0) 


#define rep(it, st, en) for(ll it = st; it < en; it++)
#define rep1(it, st, en) for(ll it = st; it <= en; it++)
#define per(it, st, en) for(ll it = en - 1; it >= st; it--)

typedef long long ll;
typedef pair<int, int> ii;
typedef pair<ll,ll> pll;

typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<bool> vb;
typedef vector<ii> vii;
typedef vector<vi> vvi;

ll INF = 1E9;
ll M = 1E9 + 7;

inline ll power (ll a,ll p){
    ll res = 1, x = a;
    while ( p ) {
        if ( p & 1 ) res = ( res * x );
        x = ( x * x ); p >>= 1;
    }
    return res;
}

template <typename T> ostream& operator<<(ostream& os, const vector<T> &p){os << "[ "; for (T x: p) os << x << " "; os << "]" << endl; return os;}
template <typename T> ostream& operator<<(ostream& os, const set<T> &p){os << "{ "; for (T x: p) os << x << " "; os << "}" << endl; return os;}
template <typename Tk, typename Tv> ostream& operator<<(ostream& os, const map<Tk, Tv> &p){os << "{ "; for (pair<Tk, Tv> x: p) os << x << " "; os << "}" << endl; return os;}
template <typename Tk, typename Tv> ostream& operator<<(ostream& os, const pair<Tk, Tv> &p){os << "{" << p.first << ',' << p.second << "}";return os;}
const int maxn = 55;
int n;
int a[maxn];
map<ii, ii> dp;
ii solve(int i, int s){
    if(i == (n - 1)){
        if(s == 0)return mp(a[i], 0);
        if(s == 1)return mp(0, a[i]);
    }
    if(dp.find(ii(i, s)) != dp.end())return dp[ii(i, s)];
    ii p1 = solve(i + 1, s ^ 1);
    ii p2 = solve(i + 1, s);
    
    if(s == 0)p1.F += a[i];
    else p1.S += a[i];

    if(s == 0)p2.S += a[i];
    else p2.F += a[i];

    ii ans;
    if(s == 0){
        if(p1.F != p2.F){
            if(p1.F > p2.F)ans = p1;
            else ans = p2;
        }else{
            if(p1.S < p2.S)ans = p1;
            else ans = p2;
        }
    }
    if(s == 1){
       if(p1.S != p2.S){
            if(p1.S > p2.S)ans = p1;
            else ans = p2;
        }else{
            if(p1.F < p2.F)ans = p1;
            else ans = p2;
        }
    }
    dp[ii(i, s)] = ans;
    return ans;
}
int main() {
    boost;
    if(fopen("input.txt", "r")){
      freopen("input.txt", "r", stdin);
      freopen("output.txt", "w", stdout);
    }
    cin >> n;
    int sum = 0;
    rep(i, 0, n){
        cin >> a[i];
    }
    ii ans = solve(0, 0);
    cout << ans.S << " " << ans.F;
    return 0;
}
//  Train Insane or Remain the same
 
